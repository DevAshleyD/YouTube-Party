{"version":3,"sources":["comp/SearchBar.js","api/youtube.js","comp/VideoItem.js","comp/VideoList.js","comp/ContinuousSlider.js","comp/VideoDetail.js","comp/CommentDetail.js","comp/Message.js","comp/MessageList.js","comp/Login.js","comp/MemberList.js","comp/App.js","index.js"],"names":["SearchBar","state","term","change","event","setState","target","value","submit","preventDefault","props","Search","className","onSubmit","this","onChange","type","React","Component","axios","create","baseURL","VideoItem","vid","onVideoSelect","onClick","src","snippet","thumbnails","medium","url","title","VideoList","videos","vidlist","map","video","ContinuousSlider","duration","componentWillReceiveProps","nextProps","time","Format","x","Number","isNaN","Date","toISOString","substr","handleSliderChange","newValue","newTime","Typography","id","gutterBottom","Slider","max","aria-labelledby","valueLabelDisplay","valueLabelFormat","VideoDetail","player","started","messageSent","interalChange","videochange","onPlay","internalChange","play","playerInfo","currentTime","console","log","onPause","pause","PlayerState","seekTo","playVideo","pauseVideo","Ready","push","getDuration","onStateChange","onReady","videoId","opts","height","width","playerVars","enablejsapi","style","marginTop","class","aria-hidden","description","CommentDetail","Faker","image","avatar","name","content","Message","timeNow","d","getHours","getMinutes","obj","msg","MessageList","images","msglist","Content","Name","Time","Login","enter","submitName","nameSubmission","createRoom","determineRender","roomStatus","placeholder","MemberList","socket","io","App","selectedVideo","data","Math","floor","random","members","messages","room","error","send","list","emit","EmitSearch","result","componentWillMount","on","col","items","sendMessage","message","pressPlay","pressPause","search","a","youtube","get","params","q","part","maxResults","key","close","ErrorDecider","EnterName","updatedTime","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.9c4bf8b8.chunk.js","sourcesContent":["import React from 'react'; \r\n\r\n\r\nclass SearchBar extends React.Component{\r\n\r\nstate = {term: ''}; \r\n\r\n change = (event) =>{\r\nthis.setState({term:event.target.value});\r\n};\r\n\r\nsubmit = (event) =>{\r\nevent.preventDefault(); \r\nthis.props.Search(this.state.term);\r\n//this.props.Search.search(this.state.term);\r\n\r\n//To Do this term will be used to call the YouTube api\r\n\r\n};\r\n\r\nrender(){\r\n\r\nreturn(\r\n    <div className=\"search-bar ui segment\">\r\n        <form onSubmit={this.submit}className =\"ui form\">\r\n            <div className=\"field\" >\r\n\r\n                <label>Video Search</label>\r\n                <input \r\n                onChange={this.change }\r\n                value={this.state.term}\r\n                type=\"text\"/>\r\n            </div>\r\n        </form>\r\n       \r\n    </div>\r\n);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default SearchBar;","import axios from \"axios\";\r\n\r\n \r\nexport default axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3\"\r\n});","import React from 'react';\r\nimport './vi.css';\r\nconst VideoItem = ({vid, onVideoSelect}) =>{\r\n  \r\n    return (\r\n    \r\n    <div onClick={() => onVideoSelect(vid)}className=\"video-item item\">\r\n        <img className=\"ui image\"src={vid.snippet.thumbnails.medium.url}/>\r\n        <div className=\"content\">\r\n        <div className=\"header\">  {vid.snippet.title}</div>\r\n        <div className=\"description\">Updated 10 mins ago</div>\r\n        </div>\r\n\r\n\r\n    </div>);\r\n\r\n};\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem'\r\nconst VideoList  = ({videos,  onVideoSelect}) =>{\r\n\r\n    const vidlist = videos.map((video)=>{\r\n\r\n        return <VideoItem vid = {video} onVideoSelect = {onVideoSelect}/>\r\n\r\n    });\r\n\r\n    return(\r\n\r\n        <div className=\"ui relaxed divided list\">\r\n\r\n            {vidlist}\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default VideoList; ","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\n\r\n class  ContinuousSlider extends React.Component {\r\n\r\n\r\n    state = {duration:2, value:0 }\r\n\r\n    componentWillReceiveProps =(nextProps)=>{\r\n\r\n        \r\n        this.setState({duration:nextProps.time});\r\n\r\n        \r\n\r\n    }\r\n\r\n     Format =(x) => {\r\n          \r\n\r\n        return Number.isNaN(x) ?  \"00:00:00\" : new Date(x * 1000).toISOString().substr(11, 8);  \r\n\r\n    }\r\n\r\n    handleSliderChange = (event, newValue)=> {\r\n\r\n        // Here, what we want to do, call a deeply nested call back function, which then notifies all the components of the new time\r\n    \r\n        this.setState({value: newValue});\r\n        this.props.newTime(newValue); \r\n\r\n\r\n      };\r\n    \r\n\r\n   \r\nrender(){\r\n\r\n   \r\n\r\n        return (\r\n            <div >\r\n            <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n            </Typography>\r\n            <Slider\r\n                 \r\n                value={this.state.value}\r\n                max={this.state.duration}\r\n                aria-labelledby=\"discrete-slider-small-steps\"\r\n                valueLabelDisplay=\"auto\"\r\n                valueLabelFormat={x => this.Format(x) }\r\n                onChange={this.handleSliderChange}\r\n            />\r\n            </div>\r\n        );\r\n        \r\n}\r\n }\r\nexport default ContinuousSlider; ","import React from 'react'; \r\nimport YouTube from 'react-youtube';\r\nimport Slider from './ContinuousSlider';\r\nimport SearchBar from './SearchBar';\r\n\r\n// You need to pass a funciton to VideoDetail \r\n// Which will then be called from inside, \r\n//props.video.id.videoId ---> This  is the link to the video\r\nclass VideoDetail extends React.Component{\r\n\r\n    state = {id:0, player:[], duration:0, started:0}; \r\n\r\n    //internalChange = false; \r\n    messageSent = false; \r\n    interalChange = -1; \r\n    \r\n    videochange = (event) => {\r\n\r\n    // Here you need to emit a event that \r\n\r\n        //if( event.target.playerInfo.playerState!=-1  && event.target.playerInfo.playerState!=3  && this.internalChange!=true ){\r\n        \r\n\r\n        //This.props.play will need to emit the current player state and the time\r\n        //this.props.play(event.target.playerInfo.playerState,  event.target.playerInfo.currentTime);\r\n\r\n        //console.log(event.target.playerInfo);\r\n        //console.log(event.target.playerInfo);\r\n\r\n\r\n        //}else if(this.internalChange==true){\r\n            //this.internalChange = false; \r\n       // }\r\n       \r\n    }\r\n\r\n    onPlay =(event)=>{\r\n      \r\n      if(this.internalChange == -1) {\r\n        this.props.play(event.target.playerInfo.currentTime, this.state.id);\r\n        this.messageSent = true; \r\n        console.log(\"I was played!\"); \r\n      }else{\r\n\r\n        this.internalChange = -1;  \r\n      }\r\n\r\n    }\r\n\r\n    onPause = (event) => {\r\n\r\n        \r\n\r\n\r\n        if(this.internalChange == -1) {\r\n          this.props.pause(this.state.id); \r\n          this.messageSent = true; \r\n          console.log(\"I was paused!\"); \r\n        }else{\r\n  \r\n          this.internalChange = -1; \r\n        }\r\n  \r\n\r\n\r\n    }\r\n\r\n    //nextProps that are being passed \r\n    componentWillReceiveProps =(nextProps)=>{\r\n\r\n        // This means the requres to change the play status is coming from a differnt person\r\n          \r\n            // Here you need to add the logic to deal with the a slider chage here\r\n            \r\n            if(this.messageSent!=true){\r\n\r\n            if(this.state.player[0]!=null){\r\n              console.log(\"I iniated the change and I'm still getting this message\")\r\n                this.internalChange = 0; \r\n\r\n\r\n                //This is using the custom made slider\r\n                //if(this.props.updatedTime!= nextProps.updatedTime){\r\n             \r\n                    //this.state.player[0].seekTo(this.props.updatedTime);\r\n                //}\r\n\r\n                //if(this.props.time!= nextProps.time){\r\n             \r\n                    //this.state.player[0].seekTo(this.props.time);\r\n               // }\r\n\r\n\r\n               \r\n                if(nextProps.PlayerState == \"PLAY\"){\r\n                   \r\n            \r\n                    this.state.player[0].seekTo(nextProps.time).playVideo();\r\n                   \r\n\r\n\r\n                }\r\n\r\n                if(nextProps.PlayerState == \"PAUSE\"){\r\n                \r\n                    this.state.player[0].pauseVideo();\r\n                }\r\n\r\n\r\n            \r\n            }\r\n          }else{\r\n            this.messageSent = false; \r\n          }\r\n            // -1 = unstarted\r\n            // 0 = ended \r\n            // 1 = playing \r\n            // 2 = paused\r\n            // 3 = buffering\r\n            // 5= video cued\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    }\r\n   \r\n   \r\n    \r\n      componentDidMount(){\r\n\r\n        // This is only ever called once\r\n        \r\n        //this.setState({id:Math.floor(Math.random() * 100000)}); \r\n        console.log(this.state.id); \r\n        \r\n      }\r\n\r\n      Ready =(event) => {\r\n\r\n      \r\n        const player = this.state.player;\r\n        player.push(event.target);\r\n       \r\n        this.setState({\r\n          player: player,\r\n          duration:player[0].getDuration(), \r\n          id:this.props.id\r\n        });\r\n      }\r\n\r\n\r\n\r\n  \r\n    render() {\r\n\r\n        const opts = {\r\n          height: '390',\r\n          width: '640',\r\n          playerVars: {\r\n            // https://developers.google.com/youtube/player_parameters\r\n        \r\n            enablejsapi:1,\r\n          },\r\n        };\r\n\r\n        if(this.props.video==null){\r\n        return <div></div>; \r\n        }\r\n        \r\n\r\n        // You need to call, a call back functtion, which then will will emit to all other sockets, then on reciveing from \r\n        //Socket you can then click the button to play\r\n        //You need to send back event.target\r\n        return(\r\n\r\n            <div>\r\n\r\n                \r\n                <div  className=\"ui embed\">\r\n                <YouTube  onStateChange={this.videochange}  onPlay={this.onPlay} onPause={this.onPause} onReady={this.Ready}     videoId={this.props.video.id.videoId} opts={opts}  />;\r\n        \r\n                </div>\r\n\r\n                <Slider newTime={this.props.newTime} time={this.state.duration} valueLabelDisplay=\"auto\"/>\r\n                <div  style ={{marginTop:'10px' }}class=\"ui buttons fluid\">\r\n\r\n                    \r\n                        <button   onClick={() => this.props.play(1)} class=\"ui icon button\"><i aria-hidden=\"true\" class=\"play icon\"></i></button>\r\n                        <button onClick={() => this.props.play(2) }class=\"ui icon button\"><i aria-hidden=\"true\" class=\"pause icon\"></i></button>\r\n                       \r\n                    \r\n                   \r\n\r\n                </div>\r\n\r\n        \r\n                <div className = \"ui segment\">\r\n                <h4 className=\"ui header\">{this.props.video.snippet.title}</h4>\r\n                <p>{this.props.video.snippet.description}</p>\r\n                </div>\r\n\r\n              \r\n        </div>\r\n        );\r\n      }\r\n    \r\n}\r\n\r\n\r\nexport default VideoDetail;","import React from 'react'; \r\n\r\nimport Faker from 'faker';\r\n\r\nconst CommentDetail = (props) =>{\r\n\r\nreturn(\r\n\r\n  \r\n            <div className=\"comment\">\r\n                <a className=\"avatar\">\r\n                <img src={Faker.image.avatar()}/>\r\n                </a>\r\n                <div className=\"content\">\r\n                <a className=\"author\"> {props.name}    </a>\r\n                <div class=\"metadata\">\r\n                <div className=\"Date\">{props.time}</div>\r\n                    \r\n                </div>\r\n                <div class=\"text\">\r\n                    {props.content} \r\n                </div>\r\n                </div>\r\n            </div>\r\n           \r\n\r\n\r\n\r\n);\r\n\r\n\r\n\r\n}\r\nexport default CommentDetail; ","import React from 'react'; \r\n\r\n\r\nclass Message extends React.Component{\r\n\r\nstate = {term: ''}; \r\n\r\n change = (event) =>{\r\nthis.setState({term:event.target.value});\r\n};\r\n\r\n\r\n timeNow = () => {\r\n    var d = new Date(),\r\n      h = (d.getHours()<10?'0':'') + d.getHours(),\r\n      m = (d.getMinutes()<10?'0':'') + d.getMinutes();\r\n    return h + ':' + m;\r\n  }\r\n\r\n\r\nsubmit = (event) =>{\r\n\r\nevent.preventDefault(); \r\n\r\n// Here you want to pass in a object \r\n// Pass in the name of the user\r\n// Pass in the current time --> Dont know how to do that\r\n\r\nvar obj = {\r\n\"Content\": this.state.term, \r\n\"Name\": this.props.name,\r\n\"Time\":this.timeNow()\r\n};\r\n\r\nthis.props.msg(obj);\r\n\r\n\r\n\r\n};\r\n\r\nrender(){\r\n\r\nreturn(\r\n    <div className=\"search-bar ui segment\">\r\n        <form id=\"myForm\" onSubmit={this.submit}className =\"ui form\">\r\n            <div className=\"field\" >\r\n\r\n                <label>Send message</label>\r\n                <input \r\n                onChange={this.change }\r\n                value={this.state.term}\r\n                type=\"text\"/>\r\n            </div>\r\n        </form>\r\n       \r\n    </div>\r\n);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Message;","\r\nimport React from 'react'; \r\nimport CommentDetail from './CommentDetail';\r\n\r\nconst MessageList = (props) => {\r\n  const images = props.msglist.map(msg => {\r\n    return <CommentDetail content = {msg.Content} name ={msg.Name} time={msg.Time} />;\r\n  });\r\n\r\n  return <div className=\"ui comments\"> {images}</div>;\r\n};\r\n\r\nexport default MessageList;","import React from 'react'; \r\nimport './Login.css';\r\n\r\nclass Login extends React.Component{\r\n\r\n   \r\nstate = {term: ''}; \r\n\r\n\r\n    change = (event) =>{\r\n    this.setState({term:event.target.value});\r\n    };\r\n    \r\n    submit = (event) =>{\r\n        \r\n    event.preventDefault(); \r\n    \r\n    this.props.enter((this.state.term)); \r\n    // Her\r\n    \r\n    };\r\n\r\n    submitName = (event) =>{\r\n        \r\n        event.preventDefault(); \r\n        \r\n        this.props.nameSubmission((this.state.term)); \r\n        // Her\r\n        \r\n        };\r\n\r\n\r\n\r\n\r\n    createRoom = () => {\r\n\r\n        this.props.createRoom(); \r\n\r\n    };\r\n\r\n\r\n    determineRender  = () => {\r\n\r\n        if(this.props.roomStatus ==null){\r\n            \r\n            return(\r\n\r\n                <div class=\"ui middle aligned center aligned grid\">\r\n                        <div class=\"column\"> \r\n                            <h2 class=\"ui image header\">\r\n                                <div class=\"content\">\r\n                                    YouTube Party!\r\n                                </div>\r\n                            </h2>\r\n                           \r\n                                \r\n                                       <div> \r\n                                       <img src=\"https://img.icons8.com/clouds/150/000000/youtube-play.png\"/>\r\n                                            <div className=\"search-bar ui segment\">\r\n                                                \r\n                                                <form onSubmit={this.submit}className =\"ui form\">\r\n                                                    <div className=\"field\" >\r\n                                                    \r\n                                                    <div class=\"ui left icon input\">\r\n                                                    <i class=\"terminal icon\"/>\r\n                                                \r\n                                                        <input \r\n                                                        \r\n                                                        onChange={this.change }\r\n                                                        value={this.state.term}\r\n                                                        \r\n                                                        type=\"text\" placeholder=\"Enter Code\"/>\r\n                                                        \r\n        \r\n                                                        </div>\r\n                                                    </div>\r\n                                                </form>\r\n                                            \r\n                                            </div>\r\n                                            </div>\r\n                              \r\n        \r\n                          \r\n                            \r\n                                    <div style ={{marginTop:'10px' }} onClick={this.submit} class=\"ui fluid large red submit button\">Join Session</div>\r\n                                    <div style ={{marginTop:'10px' }} onClick={this.createRoom}  class=\"ui fluid large white submit button\">Create Session</div>\r\n        \r\n                            \r\n        \r\n                            \r\n                        </div>\r\n                </div>\r\n        \r\n        \r\n        \r\n        \r\n            );\r\n\r\n\r\n\r\n        }else{\r\n\r\n           \r\n\r\n            return(\r\n\r\n                <div class=\"ui middle aligned center aligned grid\">\r\n                <div class=\"column\"> \r\n                    <h2 class=\"ui image header\">\r\n                        <div class=\"content\">\r\n                            YouTube Party!\r\n                        </div>\r\n                    </h2>\r\n                   \r\n                        \r\n                               <div> \r\n                               <img src=\"https://img.icons8.com/clouds/150/000000/youtube-play.png\"/>\r\n                                    <div className=\"search-bar ui segment\">\r\n                                        \r\n                                        <form onSubmit={this.submitName}className =\"ui form\">\r\n                                            <div className=\"field\" >\r\n                                            \r\n                                            <div class=\"ui left icon input\">\r\n                                            <i class=\"user icon\"/>\r\n                                        \r\n                                                <input \r\n                                                \r\n                                                onChange={this.change }\r\n                                                value={this.state.term}\r\n                                                \r\n                                                type=\"text\" placeholder=\"Enter Name\"/>\r\n                                                \r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    \r\n                                    </div>\r\n                                    </div>\r\n                      \r\n\r\n                  \r\n                    \r\n                            <div style ={{marginTop:'10px' }} onClick={this.submitName} class=\"ui fluid large green submit button\">Continue!</div>\r\n                        \r\n\r\n                    \r\n\r\n                    \r\n                </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            );\r\n\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n\r\n        \r\n    return this.determineRender();\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Login; ","\r\nimport React from 'react'; \r\nimport CommentDetail from './CommentDetail';\r\n\r\nconst MemberList = (props) => {\r\n    \r\n  const images = props.msglist.map(msg => {\r\n\r\n\r\n    return <CommentDetail content = {\"joined\"} name ={msg}  />;\r\n  });\r\n\r\n  return <div className=\"ui comments\"> {images}</div>;\r\n\r\n};\r\n\r\nexport default MemberList;","import React from 'react'; \r\nimport SearchBar from './SearchBar'; \r\nimport youtube from '../api/youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nimport CommentDetail from './CommentDetail';\r\nimport io from 'socket.io-client'\r\nimport Message from './Message'; \r\nimport MessageList from './MessageList';\r\nimport Login from './Login'; \r\nimport './App.css';\r\nimport MemberList from './MemberList'; \r\n//\"https://agile-mountain-68964.herokuapp.com/\"\r\n//\"http://localhost:8080\"\r\nconst socket = io(\"https://agile-mountain-68964.herokuapp.com/\"); \r\n//\"https://agile-mountain-68964.herokuapp.com/\"\r\n\r\n// There might be some PURE aids with the rooms here\r\n\r\nclass App extends React.Component {\r\n    state = {videos: [], \r\n        selectedVideo:null, \r\n        data:null, \r\n        id:Math.floor(Math.random() * 100000), \r\n         members:[], \r\n         messages:[],\r\n         newTime:0, \r\n         time:0, \r\n         PlayerState:\"\",\r\n         target:[], \r\n         room:null, \r\n         error:0 , \r\n         name:null};\r\n    \r\n\r\n    send = (list) => {\r\n    \r\n       \r\n        //You are sendign the array of messages\r\n        socket.emit('change color', list, this.state.room) \r\n      }\r\n\r\n    // When a user makes a search query, it is emmited to the other sockets, then once it is recived again, it will be rendered\r\n    EmitSearch = (result) =>{\r\n       \r\n       \r\n        \r\n        socket.emit('search', result, this.state.room);\r\n\r\n\r\n    }\r\n      componentWillMount = () => {\r\n         \r\n         \r\n          socket.on('change color', (col) => {\r\n              // Here Im updating the messages array, to be the new messages that I have recived\r\n              this.setState({messages:col});\r\n          })\r\n\r\n          // Setting the state with the search result\r\n          socket.on('search', (result) => {\r\n            console.log(\"theery reached back here\")\r\n            this.setState({\r\n                videos: result.data.items,\r\n                selectedVideo:result.data.items[0]\r\n              });   \r\n        })\r\n\r\n        socket.on('select', (video) => {\r\n            \r\n            this.setState({selectedVideo:video});\r\n\r\n        })\r\n\r\n        socket.on('play', (time, id) => {\r\n            this.setState({time:time, PlayerState:\"PLAY\", id:id})\r\n        })\r\n\r\n        socket.on('pause', (id) => {\r\n            this.setState({PlayerState:\"PAUSE\", id:id})\r\n        })\r\n\r\n        socket.on('newTime', (newTime) => {\r\n            this.setState({newTime:newTime})\r\n        })\r\n\r\n        socket.on('newMember', (list) => {\r\n            \r\n            console.log(list); \r\n            this.setState({members:list}); \r\n        \r\n            \r\n        \r\n\r\n\r\n        })\r\n        \r\n\r\n        socket.on('enter', (term) => {\r\n            if(term!=\"FAIL\"){\r\n\r\n            // So here the room will no longer be null\r\n            // Here when this happens you need to\r\n\r\n            this.setState({room:term})\r\n            }else{\r\n                // Here you attempted to enter a code that doesnt exist\r\n                console.log(\"The code you have entered does not exist in the data base, please try again\"); \r\n\r\n                // IF the code doesnt work, we want to display a message, with an x button, that indciates the wrong code was used\r\n                this.setState({error:1}); \r\n\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n      }\r\n\r\n    sendMessage = (message) =>{\r\n        \r\n        // You take this message that is given, and update the state of the messages\r\n        const list = this.state.messages;\r\n        list.push(message); \r\n\r\n        //This sends the current list of the messages to all the sockets\r\n        this.send(list)\r\n\r\n    }\r\n\r\n\r\n    pressPlay = (time, id) => {\r\n      // From here it will emit to all the other sokcets, execpt this one\r\n        socket.emit('play',time, id,   this.state.room)\r\n    }\r\n\r\n    pressPause = (id) => {\r\n        // From here it will emit to all the other sokcets, execpt this one\r\n          socket.emit('pause', id, this.state.room)\r\n      }\r\n\r\n\r\n    newTime = (newTime) => {\r\n\r\n      \r\n        socket.emit('newTime', newTime, this.state.room)\r\n\r\n\r\n    }\r\n\r\n \r\n    search = async (term)=>{\r\n        //The SearchBar calls the search funciton with the term\r\n        // And here we will make the api request\r\n        \r\n        const result = await youtube.get(\"/search\", {\r\n            params: {\r\n              q: term,\r\n              part: \"snippet\",\r\n               type: 'video',\r\n              maxResults: 5,\r\n              key: 'AIzaSyBSAzBSy4bhfG8JaCmptEDdreLpQXdAAbQ'            }\r\n          });\r\n          \r\n          console.log(result);\r\n          this.EmitSearch(result);\r\n          \r\n    }\r\n\r\n\r\nenter = (term) => {\r\n   \r\n    console.log(term); \r\n    socket.emit('enter', term); \r\n}\r\n\r\nnameSubmission = (name) => {\r\n   \r\n   \r\n    this.setState({name:name}); \r\n\r\n    // What we want to do is, have the logic to check the length og the list\r\n    socket.emit(\"newMember\", name, this.state.room); \r\n\r\n   \r\n    \r\n}\r\n\r\ncreateRoom = () => {\r\n    // When the create room session button is pressed, we want to emit that we want to create a new room\r\n    console.log(\"Ive been clic\")\r\n    socket.emit('createRoom');\r\n\r\n\r\n\r\n}\r\n\r\n\r\n// This is a function\r\nonVideoSelect = (video) =>{\r\n\r\n    \r\n \r\n    socket.emit('select', video, this.state.room) \r\n   \r\n}\r\n\r\nclose = ( ) => {\r\n\r\n    this.setState({error:0}); \r\n}\r\n\r\n\r\nErrorDecider = () =>{\r\n\r\n\r\n    if(this.state.error == 1){\r\n        return(\r\n            <div className=\"cont\">\r\n                <div className=\"ui segment\" >\r\n\r\n                \r\n                <Login enter={this.enter} createRoom={this.createRoom} roomStatus={null}/>\r\n                </div>\r\n\r\n                <div class=\"ui negative message\">\r\n                        <i onClick={this.close} class=\"close icon\"></i>\r\n                        <div class=\"header\">\r\n                            Invalid room code!\r\n                        </div>\r\n                        <p>Try again, or create new session. \r\n                        </p></div>\r\n\r\n\r\n            </div>\r\n        );\r\n            }else{\r\n\r\n                return(\r\n                    <div className=\"cont\">\r\n                            <div className=\"ui segment\" >\r\n                            <Login enter={this.enter} createRoom={this.createRoom} roomStatus={null}/>\r\n                            </div>\r\n                    </div>\r\n\r\n                );\r\n\r\n\r\n}\r\n\r\n}\r\n\r\nEnterName = () => {\r\n\r\n    // If the name is null, then we must prompt the user to enter in their name, which will\r\n    if(this.state.name == null){\r\n\r\n        // pass in \r\n        return(\r\n        <div className= \"cont\">\r\n            <div className=\"ui segment\">\r\n            <Login nameSubmission={this.nameSubmission} roomStatus={this.state.room}/>\r\n            </div>\r\n\r\n        </div>\r\n        );\r\n\r\n    }else{\r\n\r\n        // Right here, we want to emit to all rooms that a new memebr has joined\r\n      \r\n\r\n        return(\r\n\r\n            <div className=\"ui container\" style ={{marginTop:'10px' }}>\r\n                <h4 className=\"ui header\"> ROOM CODE: {this.state.room}</h4>\r\n                <SearchBar Search={this.search} />\r\n                \r\n                \r\n                <div className=\"ui grid\">\r\n                    <div className=\"ui row\">\r\n    \r\n                        <div  className=\"eleven wide column\">\r\n                            \r\n                            <VideoDetail  PlayerState={this.state.PlayerState}   updatedTime={this.state.newTime} newTime ={this.newTime} id={this.state.id} time ={this.state.time}  pause={this.pressPause}play={this.pressPlay} video={this.state.selectedVideo}/>\r\n                            <h4 className=\"ui header\"> Chat Room</h4>\r\n                                \r\n                                    {this.state.data}\r\n                                <div className=\"ui segment\"> \r\n                                <MessageList  msglist={this.state.messages}/>\r\n                                \r\n                                </div>\r\n                                <Message msg={this.sendMessage} name={this.state.name}/>\r\n    \r\n    \r\n    \r\n                        </div>\r\n    \r\n                        <div className=\"five wide column\">\r\n    \r\n                            <VideoList videos={this.state.videos} onVideoSelect = {this.onVideoSelect}/>\r\n                            <div className=\"ui segment\"> \r\n                                <h4 className=\"ui header\"> Connected members</h4>\r\n                                <MemberList msglist={this.state.members} name={this.state.name}/>\r\n                                \r\n                                </div>\r\n\r\n\r\n                        </div>\r\n    \r\n                    </div>\r\n                    \r\n                     \r\n                    \r\n                </div>\r\n               \r\n        \r\n             </div>\r\n        );\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nrender(){\r\n\r\n\r\n\r\n    \r\n    if(this.state.room == null){\r\n        return this.ErrorDecider(); \r\n    }\r\n    \r\n//Here the room is no longer null, we must once again parse this out into its own logic to allow users to enter their name\r\n    return this.EnterName(); \r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default App; ","import React  from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport App from './comp/App'; \r\n\r\nReactDOM.render(\r\n\r\n<App/>, document.querySelector('#root')\r\n\r\n);\r\n\r\n"],"sourceRoot":""}