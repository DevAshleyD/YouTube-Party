{"version":3,"sources":["comp/SearchBar.js","api/youtube.js","comp/VideoItem.js","comp/VideoList.js","comp/ContinuousSlider.js","comp/VideoDetail.js","comp/CommentDetail.js","comp/Message.js","comp/MessageList.js","comp/Login.js","comp/App.js","index.js"],"names":["SearchBar","state","term","change","event","setState","target","value","submit","preventDefault","props","Search","className","onSubmit","this","onChange","type","React","Component","axios","create","baseURL","VideoItem","vid","onVideoSelect","onClick","src","snippet","thumbnails","medium","url","title","VideoList","videos","vidlist","map","video","ContinuousSlider","duration","componentWillReceiveProps","nextProps","time","Format","x","Number","isNaN","Date","toISOString","substr","handleSliderChange","newValue","newTime","Typography","id","gutterBottom","Slider","max","aria-labelledby","valueLabelDisplay","valueLabelFormat","VideoDetail","player","videoId","console","log","getDuration","updatedTime","seekTo","playerState","playVideo","pauseVideo","Ready","push","onStateChange","videochange","onReady","opts","height","width","playerVars","enablejsapi","controls","style","marginTop","class","play","aria-hidden","description","CommentDetail","Faker","image","avatar","author","content","Message","msg","MessageList","images","msglist","Login","enter","createRoom","placeholder","socket","io","App","selectedVideo","data","endpoint","color","messages","Math","floor","random","room","error","send","list","emit","EmitSearch","result","componentWillMount","on","col","items","sendMessage","message","pressPlay","search","a","youtube","get","params","q","part","maxResults","key","close","ErrorDecider","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5554ec99.chunk.js","sourcesContent":["import React from 'react'; \r\n\r\n\r\nclass SearchBar extends React.Component{\r\n\r\nstate = {term: ''}; \r\n\r\n change = (event) =>{\r\nthis.setState({term:event.target.value});\r\n};\r\n\r\nsubmit = (event) =>{\r\nevent.preventDefault(); \r\nthis.props.Search(this.state.term);\r\n//this.props.Search.search(this.state.term);\r\n\r\n//To Do this term will be used to call the YouTube api\r\n\r\n};\r\n\r\nrender(){\r\n\r\nreturn(\r\n    <div className=\"search-bar ui segment\">\r\n        <form onSubmit={this.submit}className =\"ui form\">\r\n            <div className=\"field\" >\r\n\r\n                <label>Video Search</label>\r\n                <input \r\n                onChange={this.change }\r\n                value={this.state.term}\r\n                type=\"text\"/>\r\n            </div>\r\n        </form>\r\n       \r\n    </div>\r\n);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default SearchBar;","import axios from \"axios\";\r\n\r\n \r\nexport default axios.create({\r\n  baseURL: \"https://www.googleapis.com/youtube/v3\"\r\n});","import React from 'react';\r\nimport './vi.css';\r\nconst VideoItem = ({vid, onVideoSelect}) =>{\r\n  \r\n    return (\r\n    \r\n    <div onClick={() => onVideoSelect(vid)}className=\"video-item item\">\r\n        <img className=\"ui image\"src={vid.snippet.thumbnails.medium.url}/>\r\n        <div className=\"content\">\r\n        <div className=\"header\">  {vid.snippet.title}</div>\r\n        <div className=\"description\">Updated 10 mins ago</div>\r\n        </div>\r\n\r\n\r\n    </div>);\r\n\r\n};\r\n\r\nexport default VideoItem;","import React from 'react';\r\nimport VideoItem from './VideoItem'\r\nconst VideoList  = ({videos,  onVideoSelect}) =>{\r\n\r\n    const vidlist = videos.map((video)=>{\r\n\r\n        return <VideoItem vid = {video} onVideoSelect = {onVideoSelect}/>\r\n\r\n    });\r\n\r\n    return(\r\n\r\n        <div className=\"ui relaxed divided list\">\r\n\r\n            {vidlist}\r\n\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n\r\n\r\n}\r\n\r\nexport default VideoList; ","import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\n\r\n class  ContinuousSlider extends React.Component {\r\n\r\n\r\n    state = {duration:2, value:0 }\r\n\r\n    componentWillReceiveProps =(nextProps)=>{\r\n\r\n        \r\n        this.setState({duration:nextProps.time});\r\n\r\n        \r\n\r\n    }\r\n\r\n     Format =(x) => {\r\n          \r\n\r\n        return Number.isNaN(x) ?  \"00:00:00\" : new Date(x * 1000).toISOString().substr(11, 8);  \r\n\r\n    }\r\n\r\n    handleSliderChange = (event, newValue)=> {\r\n\r\n        // Here, what we want to do, call a deeply nested call back function, which then notifies all the components of the new time\r\n    \r\n        this.setState({value: newValue});\r\n        this.props.newTime(newValue); \r\n\r\n\r\n      };\r\n    \r\n\r\n   \r\nrender(){\r\n\r\n   \r\n\r\n        return (\r\n            <div >\r\n            <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n            </Typography>\r\n            <Slider\r\n                 \r\n                value={this.state.value}\r\n                max={this.state.duration}\r\n                aria-labelledby=\"discrete-slider-small-steps\"\r\n                valueLabelDisplay=\"auto\"\r\n                valueLabelFormat={x => this.Format(x) }\r\n                onChange={this.handleSliderChange}\r\n            />\r\n            </div>\r\n        );\r\n        \r\n}\r\n }\r\nexport default ContinuousSlider; ","import React from 'react'; \r\nimport YouTube from 'react-youtube';\r\nimport Slider from './ContinuousSlider';\r\nimport SearchBar from './SearchBar';\r\n\r\n// You need to pass a funciton to VideoDetail \r\n// Which will then be called from inside, \r\n//props.video.id.videoId ---> This  is the link to the video\r\nclass VideoDetail extends React.Component{\r\n\r\n    state = {id:0, player:[], duration:0}; \r\n    \r\n    //videochange = (event) => {Y\r\n\r\n\r\n      //  if( event.target.playerInfo.playerState!=-1  && event.target.playerInfo.playerState!=3   ){\r\n        \r\n        //this.props.play(event.target.playerInfo.playerState);\r\n\r\n        //}\r\n       \r\n    //}\r\n\r\n    //nextProps that are being passed \r\n    componentWillReceiveProps =(nextProps)=>{\r\n\r\n        // This means the requres to change the play status is coming from a differnt person\r\n          \r\n            // Here you need to add the logic to deal with the a slider chage here\r\n\r\n            if(this.state.player[0]!=null){\r\n\r\n                if(this.props.video.id.videoId != nextProps.video.id.videoId){\r\n                    console.log(\"here\");\r\n                    this.setState({duration:this.state.player[0].getDuration()});\r\n                }\r\n\r\n                if(this.props.updatedTime!= nextProps.updatedTime){\r\n             \r\n                    this.state.player[0].seekTo(this.props.updatedTime);\r\n                }\r\n               \r\n                if(nextProps.playerState == 1){\r\n                   \r\n                  \r\n                    this.state.player[0].playVideo(); \r\n\r\n                }\r\n\r\n                if(nextProps.playerState == 2){\r\n                \r\n                    this.state.player[0].pauseVideo();\r\n                }\r\n\r\n\r\n            \r\n            }\r\n\r\n            // -1 = unstarted\r\n            // 0 = ended \r\n            // 1 = playing \r\n            // 2 = paused\r\n            // 3 = buffering\r\n            // 5= video cued\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    }\r\n   \r\n   \r\n    \r\n      componentDidMount(){\r\n\r\n        // This is only ever called once\r\n        \r\n        this.setState({id:this.props.id}); \r\n        \r\n      }\r\n\r\n      Ready =(event) => {\r\n\r\n      \r\n        const player = this.state.player;\r\n        player.push(event.target);\r\n       \r\n        this.setState({\r\n          player: player,\r\n          duration:player[0].getDuration()\r\n        });\r\n      }\r\n\r\n\r\n\r\n  \r\n    render() {\r\n\r\n        const opts = {\r\n          height: '390',\r\n          width: '640',\r\n          playerVars: {\r\n            // https://developers.google.com/youtube/player_parameters\r\n        \r\n            enablejsapi:1,\r\n            controls:0\r\n          },\r\n        };\r\n\r\n        if(this.props.video==null){\r\n        return <div></div>; \r\n        }\r\n        \r\n\r\n        // You need to call, a call back functtion, which then will will emit to all other sockets, then on reciveing from \r\n        //Socket you can then click the button to play\r\n        //You need to send back event.target\r\n        return(\r\n\r\n            <div>\r\n\r\n                \r\n                <div  className=\"ui embed\">\r\n                <YouTube  onStateChange={this.videochange}   onReady={this.Ready}     videoId={this.props.video.id.videoId} opts={opts}  />;\r\n        \r\n                </div>\r\n\r\n                <Slider newTime={this.props.newTime} time={this.state.duration} valueLabelDisplay=\"auto\"/>\r\n                <div  style ={{marginTop:'10px' }}class=\"ui buttons fluid\">\r\n\r\n                    \r\n                        <button   onClick={() => this.props.play(1)} class=\"ui icon button\"><i aria-hidden=\"true\" class=\"play icon\"></i></button>\r\n                        <button onClick={() => this.props.play(2) }class=\"ui icon button\"><i aria-hidden=\"true\" class=\"pause icon\"></i></button>\r\n                       \r\n                    \r\n                   \r\n\r\n                </div>\r\n\r\n        \r\n                <div className = \"ui segment\">\r\n                <h4 className=\"ui header\">{this.props.video.snippet.title}</h4>\r\n                <p>{this.props.video.snippet.description}</p>\r\n                </div>\r\n\r\n              \r\n        </div>\r\n        );\r\n      }\r\n    \r\n}\r\n\r\n\r\nexport default VideoDetail;","import React from 'react'; \r\n\r\nimport Faker from 'faker';\r\n\r\nconst CommentDetail = (props) =>{\r\n\r\nreturn(\r\n\r\n  \r\n            <div className=\"comment\">\r\n                <a className=\"avatar\">\r\n                <img src={Faker.image.avatar()}/>\r\n                </a>\r\n                <div className=\"content\">\r\n                <a className=\"author\"> {props.author}    </a>\r\n                <div class=\"metadata\">\r\n                    <div className=\"date\">2 days ago</div>\r\n                    <div className=\"rating\">\r\n                    <i className=\"star icon\"></i>\r\n                    5 Faves\r\n                    </div>\r\n                </div>\r\n                <div class=\"text\">\r\n                    {props.content} \r\n                </div>\r\n                </div>\r\n            </div>\r\n           \r\n\r\n\r\n\r\n);\r\n\r\n\r\n\r\n}\r\nexport default CommentDetail; ","import React from 'react'; \r\n\r\n\r\nclass Message extends React.Component{\r\n\r\nstate = {term: ''}; \r\n\r\n change = (event) =>{\r\nthis.setState({term:event.target.value});\r\n};\r\n\r\nsubmit = (event) =>{\r\n\r\nevent.preventDefault(); \r\n\r\nthis.props.msg(this.state.term);\r\n\r\n\r\n\r\n};\r\n\r\nrender(){\r\n\r\nreturn(\r\n    <div className=\"search-bar ui segment\">\r\n        <form id=\"myForm\" onSubmit={this.submit}className =\"ui form\">\r\n            <div className=\"field\" >\r\n\r\n                <label>Send message</label>\r\n                <input \r\n                onChange={this.change }\r\n                value={this.state.term}\r\n                type=\"text\"/>\r\n            </div>\r\n        </form>\r\n       \r\n    </div>\r\n);\r\n\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default Message;","\r\nimport React from 'react'; \r\nimport CommentDetail from './CommentDetail';\r\n\r\nconst MessageList = (props) => {\r\n  const images = props.msglist.map(msg => {\r\n    return <CommentDetail content = {msg} />;\r\n  });\r\n\r\n  return <div className=\"ui comments\"> {images}</div>;\r\n};\r\n\r\nexport default MessageList;","import React from 'react'; \r\nimport './Login.css';\r\n\r\nclass Login extends React.Component{\r\n\r\n   \r\nstate = {term: ''}; \r\n\r\n\r\nchange = (event) =>{\r\n    this.setState({term:event.target.value});\r\n    };\r\n    \r\n    submit = (event) =>{\r\n        \r\n    event.preventDefault(); \r\n    \r\n    this.props.enter((this.state.term)); \r\n    \r\n    \r\n    };\r\n\r\n    createRoom = () => {\r\n\r\n        this.props.createRoom(); \r\n\r\n    };\r\n\r\n\r\n    render(){\r\n    return(\r\n\r\n        <div class=\"ui middle aligned center aligned grid\">\r\n                <div class=\"column\"> \r\n                    <h2 class=\"ui image header\">\r\n                        <div class=\"content\">\r\n                            YouTube Party!\r\n                        </div>\r\n                    </h2>\r\n                   \r\n                        \r\n                               <div> \r\n                               <img src=\"https://img.icons8.com/clouds/150/000000/youtube-play.png\"/>\r\n                                    <div className=\"search-bar ui segment\">\r\n                                        \r\n                                        <form onSubmit={this.submit}className =\"ui form\">\r\n                                            <div className=\"field\" >\r\n                                            \r\n                                            <div class=\"ui left icon input\">\r\n                                            <i class=\"terminal icon\"/>\r\n                                        \r\n                                                <input \r\n                                                \r\n                                                onChange={this.change }\r\n                                                value={this.state.term}\r\n                                                \r\n                                                type=\"text\" placeholder=\"Enter Code\"/>\r\n                                                \r\n\r\n                                                </div>\r\n                                            </div>\r\n                                        </form>\r\n                                    \r\n                                    </div>\r\n                                    </div>\r\n                      \r\n\r\n                  \r\n                    \r\n                            <div style ={{marginTop:'10px' }} onClick={this.submit} class=\"ui fluid large red submit button\">Join Session</div>\r\n                            <div style ={{marginTop:'10px' }} onClick={this.createRoom}  class=\"ui fluid large white submit button\">Create Session</div>\r\n\r\n                    \r\n\r\n                    \r\n                </div>\r\n        </div>\r\n\r\n\r\n\r\n\r\n    );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Login; ","import React from 'react'; \r\nimport SearchBar from './SearchBar'; \r\nimport youtube from '../api/youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nimport CommentDetail from './CommentDetail';\r\nimport io from 'socket.io-client'\r\nimport Message from './Message'; \r\nimport MessageList from './MessageList';\r\nimport Login from './Login'; \r\nimport './App.css';\r\nconst socket = io(\"https://agile-mountain-68964.herokuapp.com/\"); \r\n\r\n\r\n// There might be some PURE aids with the rooms here\r\n\r\nclass App extends React.Component {\r\n    state = {videos: [], selectedVideo: null, data:null,  endpoint: \"/\", color: 'white', messages:[],newTime:0, time:0, playerState:-1, target:[], id: Math.floor(Math.random() * 100000), room:null, error:0 };\r\n    \r\n\r\n    send = (list) => {\r\n    \r\n       \r\n        //You are sendign the array of messages\r\n        socket.emit('change color', list, this.state.room) \r\n      }\r\n\r\n    // When a user makes a search query, it is emmited to the other sockets, then once it is recived again, it will be rendered\r\n    EmitSearch = (result) =>{\r\n       \r\n       \r\n        \r\n        socket.emit('search', result, this.state.room);\r\n\r\n\r\n    }\r\n      componentWillMount = () => {\r\n         \r\n         \r\n          socket.on('change color', (col) => {\r\n              // Here Im updating the messages array, to be the new messages that I have recived\r\n              this.setState({messages:col});\r\n          })\r\n\r\n          // Setting the state with the search result\r\n          socket.on('search', (result) => {\r\n            console.log(\"theery reached back here\")\r\n            this.setState({\r\n                videos: result.data.items,\r\n                selectedVideo:result.data.items[0]\r\n              });   \r\n        })\r\n\r\n        socket.on('select', (video) => {\r\n            \r\n            this.setState({selectedVideo:video});\r\n\r\n        })\r\n\r\n        socket.on('play', (state) => {\r\n            this.setState({playerState:state})\r\n        })\r\n\r\n        socket.on('newTime', (newTime) => {\r\n            this.setState({newTime:newTime})\r\n        })\r\n\r\n        socket.on('enter', (term) => {\r\n            if(term!=\"FAIL\"){\r\n            this.setState({room:term})\r\n            }else{\r\n                // Here you attempted to enter a code that doesnt exist\r\n                console.log(\"The code you have entered does not exist in the data base, please try again\"); \r\n\r\n                // IF the code doesnt work, we want to display a message, with an x button, that indciates the wrong code was used\r\n                this.setState({error:1}); \r\n\r\n\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n      }\r\n\r\n    sendMessage = (message) =>{\r\n        \r\n        // You take this message that is given, and update the state of the messages\r\n        const list = this.state.messages;\r\n        list.push(message); \r\n        this.send(list)\r\n\r\n    }\r\n\r\n\r\n    pressPlay = (state) => {\r\n\r\n      \r\n        socket.emit('play', state, this.state.room)\r\n\r\n\r\n    }\r\n\r\n\r\n    newTime = (newTime) => {\r\n\r\n      \r\n        socket.emit('newTime', newTime, this.state.room)\r\n\r\n\r\n    }\r\n\r\n \r\n    search = async (term)=>{\r\n        //The SearchBar calls the search funciton with the term\r\n        // And here we will make the api request\r\n        \r\n        const result = await youtube.get(\"/search\", {\r\n            params: {\r\n              q: term,\r\n              part: \"snippet\",\r\n               type: 'video',\r\n              maxResults: 5,\r\n              key: 'AIzaSyBSAzBSy4bhfG8JaCmptEDdreLpQXdAAbQ'            }\r\n          });\r\n          \r\n          console.log(result);\r\n          this.EmitSearch(result);\r\n          \r\n    }\r\n\r\n\r\nenter = (term) => {\r\n   \r\n    console.log(term); \r\n    socket.emit('enter', term); \r\n}\r\n\r\ncreateRoom = () => {\r\n    // When the create room session button is pressed, we want to emit that we want to create a new room\r\n    console.log(\"Ive been clic\")\r\n    socket.emit('createRoom');\r\n\r\n\r\n\r\n}\r\n\r\n\r\n// This is a function\r\nonVideoSelect = (video) =>{\r\n\r\n    \r\n \r\n    socket.emit('select', video, this.state.room) \r\n   \r\n}\r\n\r\nclose = ( ) => {\r\n\r\n    this.setState({error:0}); \r\n}\r\n\r\n\r\nErrorDecider = () =>{\r\n\r\n\r\n    if(this.state.error == 1){\r\n        return(\r\n            <div className=\"cont\">\r\n                <div className=\"ui segment\" >\r\n\r\n                <Login enter={this.enter} createRoom={this.createRoom} />\r\n                </div>\r\n\r\n                <div class=\"ui negative message\">\r\n                        <i onClick={this.close} class=\"close icon\"></i>\r\n                        <div class=\"header\">\r\n                            Invalid room code!\r\n                        </div>\r\n                        <p>Try again, or create new session. \r\n                        </p></div>\r\n\r\n\r\n            </div>\r\n        );\r\n            }else{\r\n\r\n                return(\r\n                    <div className=\"cont\">\r\n                            <div className=\"ui segment\" >\r\n                            <Login enter={this.enter} createRoom={this.createRoom} />\r\n                            </div>\r\n                    </div>\r\n\r\n                );\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nrender(){\r\n\r\n    if(this.state.room == null){\r\n        return this.ErrorDecider(); \r\n    }\r\n    \r\n\r\n    return(\r\n\r\n        <div className=\"ui container\" style ={{marginTop:'10px' }}>\r\n\r\n            <SearchBar Search={this.search} />\r\n            \r\n            \r\n            <div className=\"ui grid\">\r\n                <div className=\"ui row\">\r\n\r\n                    <div  className=\"eleven wide column\">\r\n                        \r\n                        <VideoDetail  updatedTime={this.state.newTime} newTime ={this.newTime}id={this.state.id} time ={this.state.time} playerState={this.state.playerState} play={this.pressPlay} video={this.state.selectedVideo}/>\r\n                        <h4 className=\"ui header\"> Chat Room</h4>\r\n                            \r\n                                {this.state.data}\r\n                            <div className=\"ui segment\"> \r\n                            <MessageList msglist={this.state.messages}/>\r\n                            \r\n                            </div>\r\n                            <Message msg={this.sendMessage} />\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"five wide column\">\r\n\r\n                        <VideoList videos={this.state.videos} onVideoSelect = {this.onVideoSelect}/>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n                 \r\n                \r\n            </div>\r\n           \r\n    \r\n         </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default App; ","import React  from 'react'; \r\nimport ReactDOM from 'react-dom'; \r\nimport App from './comp/App'; \r\n\r\nReactDOM.render(\r\n\r\n<App/>, document.querySelector('#root')\r\n\r\n);\r\n\r\n"],"sourceRoot":""}