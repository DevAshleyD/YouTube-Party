{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\react\\\\YouTubeClone\\\\client\\\\src\\\\comp\\\\VideoDetail.js\";\nimport React from 'react';\nimport YouTube from 'react-youtube';\nimport Slider from './ContinuousSlider';\nimport SearchBar from './SearchBar'; // You need to pass a funciton to VideoDetail \n// Which will then be called from inside, \n//props.video.id.videoId ---> This  is the link to the video\n\nclass VideoDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: 0,\n      player: [],\n      duration: 0\n    };\n\n    this.componentWillReceiveProps = nextProps => {\n      // This means the requres to change the play status is coming from a differnt person\n      if (this.state.player[0] != null) {\n        this.setState({\n          duration: this.state.player[0].getDuration()\n        });\n\n        if (nextProps.playerState == 1) {\n          this.state.player[0].playVideo();\n        }\n\n        if (nextProps.playerState == 2) {\n          this.state.player[0].pauseVideo();\n        }\n      } // -1 = unstarted\n      // 0 = ended \n      // 1 = playing \n      // 2 = paused\n      // 3 = buffering\n      // 5= video cued\n\n    };\n\n    this.Ready = event => {\n      const player = this.state.player;\n      player.push(event.target);\n      this.setState({\n        player: player,\n        duration: player[0].getDuration()\n      });\n    };\n  }\n\n  componentDidMount() {\n    // This is only ever called once\n    this.setState({\n      id: this.props.id\n    });\n  }\n\n  render() {\n    const opts = {\n      height: '390',\n      width: '640',\n      playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        enablejsapi: 1,\n        controls: 0\n      }\n    };\n\n    if (this.props.video == null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 16\n        }\n      });\n    } // You need to call, a call back functtion, which then will will emit to all other sockets, then on reciveing from \n    //Socket you can then click the button to play\n    //You need to send back event.target\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui embed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(YouTube, {\n      onStateChange: this.videochange,\n      onReady: this.Ready,\n      videoId: this.props.video.id.videoId,\n      opts: opts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }), \";\"), /*#__PURE__*/React.createElement(Slider, {\n      time: this.state.duration,\n      valueLabelDisplay: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: '10px'\n      },\n      class: \"ui buttons fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.play(1),\n      class: \"ui icon button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      \"aria-hidden\": \"true\",\n      class: \"play icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 93\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.play(2),\n      class: \"ui icon button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      \"aria-hidden\": \"true\",\n      class: \"pause icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 91\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"ui header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, this.props.video.snippet.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, this.props.video.snippet.description)));\n  }\n\n}\n\nexport default VideoDetail;","map":{"version":3,"sources":["C:/Users/david/react/YouTubeClone/client/src/comp/VideoDetail.js"],"names":["React","YouTube","Slider","SearchBar","VideoDetail","Component","state","id","player","duration","componentWillReceiveProps","nextProps","setState","getDuration","playerState","playVideo","pauseVideo","Ready","event","push","target","componentDidMount","props","render","opts","height","width","playerVars","enablejsapi","controls","video","videochange","videoId","marginTop","play","snippet","title","description"],"mappings":"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","sourcesContent":["import React from 'react'; \r\nimport YouTube from 'react-youtube';\r\nimport Slider from './ContinuousSlider';\r\nimport SearchBar from './SearchBar';\r\n\r\n// You need to pass a funciton to VideoDetail \r\n// Which will then be called from inside, \r\n//props.video.id.videoId ---> This  is the link to the video\r\nclass VideoDetail extends React.Component{\r\n\r\n    state = {id:0, player:[], duration:0}; \r\n    \r\n    //videochange = (event) => {\r\n\r\n      //  if( event.target.playerInfo.playerState!=-1  && event.target.playerInfo.playerState!=3   ){\r\n        \r\n        //this.props.play(event.target.playerInfo.playerState);\r\n\r\n        //}\r\n       \r\n    //}\r\n\r\n    //nextProps that are being passed \r\n    componentWillReceiveProps =(nextProps)=>{\r\n\r\n        // This means the requres to change the play status is coming from a differnt person\r\n\r\n\r\n\r\n            if(this.state.player[0]!=null){\r\n                \r\n                this.setState({duration:this.state.player[0].getDuration()}); \r\n               \r\n                if(nextProps.playerState == 1){\r\n                   \r\n                  \r\n                    this.state.player[0].playVideo(); \r\n\r\n                }\r\n\r\n                if(nextProps.playerState == 2){\r\n                \r\n                    this.state.player[0].pauseVideo();\r\n                }\r\n\r\n\r\n            \r\n            }\r\n\r\n            // -1 = unstarted\r\n            // 0 = ended \r\n            // 1 = playing \r\n            // 2 = paused\r\n            // 3 = buffering\r\n            // 5= video cued\r\n\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    }\r\n   \r\n   \r\n    \r\n      componentDidMount(){\r\n\r\n        // This is only ever called once\r\n        \r\n        this.setState({id:this.props.id}); \r\n        \r\n      }\r\n\r\n      Ready =(event) => {\r\n\r\n      \r\n        const player = this.state.player;\r\n        player.push(event.target);\r\n       \r\n        this.setState({\r\n          player: player,\r\n          duration:player[0].getDuration()\r\n        });\r\n      }\r\n\r\n\r\n\r\n  \r\n    render() {\r\n\r\n        const opts = {\r\n          height: '390',\r\n          width: '640',\r\n          playerVars: {\r\n            // https://developers.google.com/youtube/player_parameters\r\n        \r\n            enablejsapi:1,\r\n            controls:0\r\n          },\r\n        };\r\n\r\n        if(this.props.video==null){\r\n        return <div></div>; \r\n        }\r\n        \r\n\r\n        // You need to call, a call back functtion, which then will will emit to all other sockets, then on reciveing from \r\n        //Socket you can then click the button to play\r\n        //You need to send back event.target\r\n        return(\r\n\r\n            <div>\r\n\r\n                \r\n                <div  className=\"ui embed\">\r\n                <YouTube  onStateChange={this.videochange}   onReady={this.Ready}     videoId={this.props.video.id.videoId} opts={opts}  />;\r\n        \r\n                </div>\r\n\r\n                <Slider time={this.state.duration} valueLabelDisplay=\"auto\"/>\r\n                <div  style ={{marginTop:'10px' }}class=\"ui buttons fluid\">\r\n\r\n                    \r\n                        <button   onClick={() => this.props.play(1)} class=\"ui icon button\"><i aria-hidden=\"true\" class=\"play icon\"></i></button>\r\n                        <button onClick={() => this.props.play(2) }class=\"ui icon button\"><i aria-hidden=\"true\" class=\"pause icon\"></i></button>\r\n                       \r\n                    \r\n                   \r\n\r\n                </div>\r\n\r\n        \r\n                <div className = \"ui segment\">\r\n                <h4 className=\"ui header\">{this.props.video.snippet.title}</h4>\r\n                <p>{this.props.video.snippet.description}</p>\r\n                </div>\r\n\r\n              \r\n        </div>\r\n        );\r\n      }\r\n    \r\n}\r\n\r\n\r\nexport default VideoDetail;"]},"metadata":{},"sourceType":"module"}