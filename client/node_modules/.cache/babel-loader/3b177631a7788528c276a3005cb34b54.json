{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\react\\\\YouTubeClone\\\\client\\\\src\\\\comp\\\\App.js\";\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport youtube from '../api/youtube';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoDetail';\nimport CommentDetail from './CommentDetail';\nimport socketIOClient from \"socket.io-client\";\nimport Message from './Message';\nimport MessageList from './MessageList';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      selectedVideo: null,\n      data: null,\n      endpoint: \"localhost:4001\",\n      color: 'white',\n      messages: []\n    };\n\n    this.send = list => {\n      const socket = socketIOClient(this.state.endpoint); //You are sendign the array of messages\n\n      socket.emit('change color', list);\n    };\n\n    this.componentWillMount = () => {\n      const socket = socketIOClient(this.state.endpoint);\n      socket.on('change color', col => {\n        // Here Im updating the messages array, to be the new messages that I have recived\n        this.setState({\n          messages: col\n        });\n      });\n    };\n\n    this.sendMessage = message => {\n      // You take this message that is given, and update the state of the messages\n      const list = this.state.messages;\n      list.push(message);\n      this.send(list);\n    };\n\n    this.search = async term => {\n      //The SearchBar calls the search funciton with the term\n      // And here we will make the api request\n      const result = await youtube.get(\"/search\", {\n        params: {\n          q: term,\n          part: \"snippet\",\n          type: 'video',\n          maxResults: 5,\n          key: 'AIzaSyBSAzBSy4bhfG8JaCmptEDdreLpQXdAAbQ'\n        }\n      });\n      this.setState({\n        videos: result.data.items,\n        selectedVideo: result.data.items[0]\n      });\n    };\n\n    this.onVideoSelect = video => {\n      this.setState({\n        selectedVideo: video\n      });\n    };\n  }\n\n  render() {\n    const socket = socketIOClient(this.state.endpoint);\n    console.log(this.state.messages);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui container\",\n      style: {\n        marginTop: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      Search: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"eleven wide column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(VideoDetail, {\n      video: this.state.selectedVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"five wide column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(VideoList, {\n      videos: this.state.videos,\n      onVideoSelect: this.onVideoSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"ui header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 19\n      }\n    }, \" Chat Room\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sixteen wide column ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, this.state.data, /*#__PURE__*/React.createElement(MessageList, {\n      msglist: this.state.messages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    })))), /*#__PURE__*/React.createElement(Message, {\n      msg: this.sendMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/david/react/YouTubeClone/client/src/comp/App.js"],"names":["React","SearchBar","youtube","VideoList","VideoDetail","CommentDetail","socketIOClient","Message","MessageList","App","Component","state","videos","selectedVideo","data","endpoint","color","messages","send","list","socket","emit","componentWillMount","on","col","setState","sendMessage","message","push","search","term","result","get","params","q","part","type","maxResults","key","items","onVideoSelect","video","render","console","log","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'; \r\nimport SearchBar from './SearchBar'; \r\nimport youtube from '../api/youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nimport CommentDetail from './CommentDetail';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport Message from './Message'; \r\nimport MessageList from './MessageList';\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {videos: [], selectedVideo: null, data:null,  endpoint: \"localhost:4001\", color: 'white', messages:[]};\r\n    \r\n\r\n\r\n\r\n\r\n    send = (list) => {\r\n        const socket = socketIOClient(this.state.endpoint);\r\n        //You are sendign the array of messages\r\n        socket.emit('change color', list) \r\n      }\r\n      \r\n    \r\n      \r\n    \r\n      componentWillMount = () => {\r\n          const socket = socketIOClient(this.state.endpoint);\r\n          \r\n        \r\n          socket.on('change color', (col) => {\r\n              // Here Im updating the messages array, to be the new messages that I have recived\r\n              this.setState({messages:col});\r\n          })\r\n      }\r\n\r\n   \r\n\r\n     \r\n    sendMessage = (message) =>{\r\n        // You take this message that is given, and update the state of the messages\r\n        const list = this.state.messages;\r\n        list.push(message); \r\n        this.send(list)\r\n\r\n    }\r\n \r\n    search = async (term)=>{\r\n        //The SearchBar calls the search funciton with the term\r\n        // And here we will make the api request\r\n\r\n        const result = await youtube.get(\"/search\", {\r\n            params: {\r\n              q: term,\r\n              part: \"snippet\",\r\n               type: 'video',\r\n              maxResults: 5,\r\n              key: 'AIzaSyBSAzBSy4bhfG8JaCmptEDdreLpQXdAAbQ'            }\r\n          });\r\n\r\n         \r\n          this.setState({\r\n              videos: result.data.items,\r\n              selectedVideo:result.data.items[0]\r\n            });   \r\n    }\r\n\r\nonVideoSelect = (video) =>{\r\nthis.setState({selectedVideo:video});\r\n\r\n\r\n}\r\n\r\nrender(){\r\n\r\n    const socket = socketIOClient(this.state.endpoint);\r\n    console.log(this.state.messages);\r\n\r\n\r\n    return(\r\n\r\n        <div className=\"ui container\" style ={{marginTop:'10px' }}>\r\n\r\n            <SearchBar Search={this.search} />\r\n            \r\n            \r\n            <div className=\"ui grid\">\r\n                <div className=\"ui row\">\r\n\r\n                    <div className=\"eleven wide column\">\r\n                        <VideoDetail video={this.state.selectedVideo}/>\r\n                    </div>\r\n\r\n                    <div className=\"five wide column\">\r\n\r\n                        <VideoList videos={this.state.videos} onVideoSelect = {this.onVideoSelect}/>\r\n                    </div>\r\n                </div>\r\n                  <div className=\"ui row\">\r\n                  <h4 className=\"ui header\"> Chat Room</h4>\r\n                    <div className=\"sixteen wide column ui segment\">\r\n                        {this.state.data}\r\n                    \r\n                    <MessageList msglist={this.state.messages}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n       \r\n        <Message msg={this.sendMessage} />\r\n         </div>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default App; "]},"metadata":{},"sourceType":"module"}