{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\react\\\\YouTubeClone\\\\client\\\\src\\\\comp\\\\App.js\";\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport youtube from '../api/youtube';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoDetail';\nimport CommentDetail from './CommentDetail';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      selectedVideo: null,\n      data: null\n    };\n\n    this.callBackendAPI = async () => {\n      const response = await fetch('/express_backend');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n\n    this.search = async term => {\n      //The SearchBar calls the search funciton with the term\n      // And here we will make the api request\n      const result = await youtube.get(\"/search\", {\n        params: {\n          q: term,\n          part: \"snippet\",\n          type: 'video',\n          maxResults: 5,\n          key: 'AIzaSyBSAzBSy4bhfG8JaCmptEDdreLpQXdAAbQ'\n        }\n      });\n      this.setState({\n        videos: result.data.items,\n        selectedVideo: result.data.items[0]\n      });\n    };\n\n    this.onVideoSelect = video => {\n      this.setState({\n        selectedVideo: video\n      });\n    };\n  }\n\n  componentDidMount() {\n    // Call our fetch function below once the component mounts\n    this.callBackendAPI().then(res => this.setState({\n      data: res.express\n    })).catch(err => console.log(err));\n  } // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui container\",\n      style: {\n        marginTop: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      Search: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"eleven wide column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(VideoDetail, {\n      video: this.state.selectedVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"five wide column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(VideoList, {\n      videos: this.state.videos,\n      onVideoSelect: this.onVideoSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }\n    })))), \"wow right here \", this.state.data, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(CommentDetail, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 12\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/david/react/YouTubeClone/client/src/comp/App.js"],"names":["React","SearchBar","youtube","VideoList","VideoDetail","CommentDetail","App","Component","state","videos","selectedVideo","data","callBackendAPI","response","fetch","body","json","status","Error","message","search","term","result","get","params","q","part","type","maxResults","key","setState","items","onVideoSelect","video","componentDidMount","then","res","express","catch","err","console","log","render","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'; \r\nimport SearchBar from './SearchBar'; \r\nimport youtube from '../api/youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nimport CommentDetail from './CommentDetail';\r\n\r\nclass App extends React.Component {\r\n    state = {videos: [], selectedVideo: null, data:null};\r\n\r\n    componentDidMount() {\r\n        // Call our fetch function below once the component mounts\r\n      this.callBackendAPI()\r\n        .then(res => this.setState({ data: res.express }))\r\n        .catch(err => console.log(err));\r\n    }\r\n      // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\r\n    callBackendAPI = async () => {\r\n      const response = await fetch('/express_backend');\r\n      const body = await response.json();\r\n  \r\n      if (response.status !== 200) {\r\n        throw Error(body.message) \r\n      }\r\n      return body;\r\n    };\r\n\r\n\r\n\r\n    search = async (term)=>{\r\n        //The SearchBar calls the search funciton with the term\r\n        // And here we will make the api request\r\n\r\n        const result = await youtube.get(\"/search\", {\r\n            params: {\r\n              q: term,\r\n              part: \"snippet\",\r\n               type: 'video',\r\n              maxResults: 5,\r\n              key: 'AIzaSyBSAzBSy4bhfG8JaCmptEDdreLpQXdAAbQ'            }\r\n          });\r\n\r\n         \r\n          this.setState({\r\n              videos: result.data.items,\r\n              selectedVideo:result.data.items[0]\r\n            });\r\n          \r\n    }\r\n\r\nonVideoSelect = (video) =>{\r\nthis.setState({selectedVideo:video});\r\n\r\n\r\n}\r\n\r\nrender(){\r\n\r\n    return(\r\n\r\n        <div className=\"ui container\" style ={{marginTop:'10px' }}>\r\n\r\n            <SearchBar Search={this.search} />\r\n            \r\n            <div className=\"ui grid\">\r\n                <div className=\"ui row\">\r\n\r\n                    <div className=\"eleven wide column\">\r\n                        <VideoDetail video={this.state.selectedVideo}/>\r\n                    </div>\r\n\r\n                    <div className=\"five wide column\">\r\n                        <VideoList videos={this.state.videos} onVideoSelect = {this.onVideoSelect}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           wow right here {this.state.data}\r\n           <div className = \"ui segment\">\r\n           <CommentDetail/>\r\n           </div>\r\n         </div>\r\n\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default App; "]},"metadata":{},"sourceType":"module"}