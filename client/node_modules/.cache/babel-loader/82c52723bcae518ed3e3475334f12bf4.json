{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\react\\\\YouTubeClone\\\\client\\\\src\\\\comp\\\\ContinuousSlider.js\";\nimport React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Slider from '@material-ui/core/Slider';\n\nclass ContinuousSlider extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      duration: 2\n    };\n\n    this.componentWillReceiveProps = nextProps => {\n      console.log(nextProps.time);\n      this.setState({\n        duration: nextProps.time\n      });\n    };\n\n    this.Format = x => {\n      return Number.isNaN(x) ? \"00:00:00\" : new Date(x * 1000).toISOString().substr(11, 8);\n    };\n\n    this.handleInputChange = event => {\n      // Here, we want to take the value here, lets just print it\n      console.log(Number(event.target.value));\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      id: \"discrete-slider-small-steps\",\n      gutterBottom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Slider, {\n      max: this.state.duration,\n      \"aria-labelledby\": \"discrete-slider-small-steps\",\n      valueLabelDisplay: \"auto\",\n      valueLabelFormat: x => this.Format(x),\n      onChange: this.handleInputChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default ContinuousSlider;","map":{"version":3,"sources":["C:/Users/david/react/YouTubeClone/client/src/comp/ContinuousSlider.js"],"names":["React","Typography","Slider","ContinuousSlider","Component","state","duration","componentWillReceiveProps","nextProps","console","log","time","setState","Format","x","Number","isNaN","Date","toISOString","substr","handleInputChange","event","target","value","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;;AAIC,MAAOC,gBAAP,SAAgCH,KAAK,CAACI,SAAtC,CAAgD;AAAA;AAAA;AAAA,SAG7CC,KAH6C,GAGrC;AAACC,MAAAA,QAAQ,EAAC;AAAV,KAHqC;;AAAA,SAK7CC,yBAL6C,GAKjBC,SAAD,IAAa;AAEpCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAS,CAACG,IAAtB;AACA,WAAKC,QAAL,CAAc;AAACN,QAAAA,QAAQ,EAACE,SAAS,CAACG;AAApB,OAAd;AAGH,KAX4C;;AAAA,SAa5CE,MAb4C,GAanCC,CAAD,IAAO;AAGZ,aAAOC,MAAM,CAACC,KAAP,CAAaF,CAAb,IAAmB,UAAnB,GAAgC,IAAIG,IAAJ,CAASH,CAAC,GAAG,IAAb,EAAmBI,WAAnB,GAAiCC,MAAjC,CAAwC,EAAxC,EAA4C,CAA5C,CAAvC;AAEH,KAlB4C;;AAAA,SAoB7CC,iBApB6C,GAoBxBC,KAAD,IAAW;AAE3B;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAaK,MAAM,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAnB;AAGD,KA1B0C;AAAA;;AA8BjDC,EAAAA,MAAM,GAAE;AAIA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAC,6BAAf;AAA6C,MAAA,YAAY,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAGA,oBAAC,MAAD;AAGI,MAAA,GAAG,EAAE,KAAKnB,KAAL,CAAWC,QAHpB;AAII,yBAAgB,6BAJpB;AAKI,MAAA,iBAAiB,EAAC,MALtB;AAMI,MAAA,gBAAgB,EAAEQ,CAAC,IAAI,KAAKD,MAAL,CAAYC,CAAZ,CAN3B;AAOI,MAAA,QAAQ,EAAE,KAAKM,iBAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,CADJ;AAgBP;;AAlDgD;;AAoDjD,eAAejB,gBAAf","sourcesContent":["import React from 'react';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\n\r\n class  ContinuousSlider extends React.Component {\r\n\r\n\r\n    state = {duration:2}\r\n\r\n    componentWillReceiveProps =(nextProps)=>{\r\n\r\n        console.log(nextProps.time);\r\n        this.setState({duration:nextProps.time}); \r\n        \r\n\r\n    }\r\n\r\n     Format =(x) => {\r\n          \r\n\r\n        return Number.isNaN(x) ?  \"00:00:00\" : new Date(x * 1000).toISOString().substr(11, 8);  \r\n\r\n    }\r\n\r\n    handleInputChange = (event) => {\r\n\r\n        // Here, we want to take the value here, lets just print it\r\n        console.log( Number(event.target.value));\r\n\r\n\r\n      };\r\n    \r\n\r\n   \r\nrender(){\r\n\r\n   \r\n\r\n        return (\r\n            <div >\r\n            <Typography id=\"discrete-slider-small-steps\" gutterBottom>\r\n            </Typography>\r\n            <Slider\r\n                 \r\n                \r\n                max={this.state.duration}\r\n                aria-labelledby=\"discrete-slider-small-steps\"\r\n                valueLabelDisplay=\"auto\"\r\n                valueLabelFormat={x => this.Format(x) }\r\n                onChange={this.handleInputChange}\r\n            />\r\n            </div>\r\n        );\r\n        \r\n}\r\n }\r\nexport default ContinuousSlider; "]},"metadata":{},"sourceType":"module"}