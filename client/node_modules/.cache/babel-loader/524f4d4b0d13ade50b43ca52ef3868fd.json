{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\react\\\\YouTubeClone\\\\client\\\\src\\\\comp\\\\VideoDetail.js\";\nimport React from 'react';\nimport YouTube from 'react-youtube'; // You need to pass a funciton to VideoDetail \n// Which will then be called from inside, \n//props.video.id.videoId ---> This  is the link to the video\n\nclass VideoDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      event: event\n    };\n\n    this.videochange = event => {\n      this.props.play(event.target.playerInfo.currentTime, event.target.playerInfo.playerState); //PlayerState = 2 then it is playing\n      //PlayerState = 1 then it is pasued\n      //Match the player state, if it is 2 we pause at the current time, if it is 1 we play at the currnet time that is passed\n      //this.setState({time:event.target.playerInfo.currentTime,playerState:event.target.playerInfo.playerState});\n\n      this.setState({\n        target: event.target.seekTo(1)\n      });\n    };\n\n    this.ready = event => {\n      //So its all dependant on the props state here\n      //-1 == unstarted\n      //0 == ended\n      //1 = playing\n      //2 = pasued\n      //3 =  buffering\n      //5 = video cued \n      //event.target.player.seekTo(this.props.time);\n      event.target.seekTo(this.props.time);\n    };\n  }\n\n  //If the props have changed, then I want to \n  componentDidUpdate(prevProps) {\n    if (prevProps.time != this.props.time) {\n      this.state.target.seekTo(this.props.time);\n    }\n  }\n\n  render() {\n    const opts = {\n      height: '390',\n      width: '640',\n      playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        enablejsapi: 1\n      }\n    };\n\n    if (this.props.video == null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 16\n        }\n      });\n    } // You need to call, a call back functtion, which then will will emit to all other sockets, then on reciveing from \n    //Socket you can then click the button to play\n    //You need to send back event.target\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui embed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(YouTube, {\n      onStateChange: this.videochange,\n      onReady: this.ready,\n      videoId: this.props.video.id.videoId,\n      opts: opts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }\n    }), \";\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"ui header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, this.props.video.snippet.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, this.props.video.snippet.description)));\n  }\n\n}\n\nexport default VideoDetail;","map":{"version":3,"sources":["C:/Users/david/react/YouTubeClone/client/src/comp/VideoDetail.js"],"names":["React","YouTube","VideoDetail","Component","state","event","videochange","props","play","target","playerInfo","currentTime","playerState","setState","seekTo","ready","time","componentDidUpdate","prevProps","render","opts","height","width","playerVars","enablejsapi","video","id","videoId","snippet","title","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB,C,CACA;AACA;AACA;;AACA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAAyC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AAACC,MAAAA,KAAK,EAACA;AAAP,KAF6B;;AAAA,SAIrCC,WAJqC,GAItBD,KAAD,IAAW;AAGrB,WAAKE,KAAL,CAAWC,IAAX,CAAgBH,KAAK,CAACI,MAAN,CAAaC,UAAb,CAAwBC,WAAxC,EAAqDN,KAAK,CAACI,MAAN,CAAaC,UAAb,CAAwBE,WAA7E,EAHqB,CAKrB;AACA;AAEA;AACA;;AACA,WAAKC,QAAL,CAAc;AAACJ,QAAAA,MAAM,EAACJ,KAAK,CAACI,MAAN,CAAaK,MAAb,CAAoB,CAApB;AAAR,OAAd;AACH,KAfoC;;AAAA,SAkBrCC,KAlBqC,GAkB7BV,KAAD,IAAU;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAA,MAAAA,KAAK,CAACI,MAAN,CAAaK,MAAb,CAAoB,KAAKP,KAAL,CAAWS,IAA/B;AAEH,KA/BoC;AAAA;;AAiCrC;AACAC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAE1B,QAAGA,SAAS,CAACF,IAAV,IAAkB,KAAKT,KAAL,CAAWS,IAAhC,EAAqC;AAEjC,WAAKZ,KAAL,CAAWK,MAAX,CAAkBK,MAAlB,CAAyB,KAAKP,KAAL,CAAWS,IAApC;AAEH;AAIF;;AAMHG,EAAAA,MAAM,GAAG;AAEL,UAAMC,IAAI,GAAG;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,KAAK,EAAE,KAFI;AAGXC,MAAAA,UAAU,EAAE;AACV;AAEAC,QAAAA,WAAW,EAAC;AAHF;AAHD,KAAb;;AAUA,QAAG,KAAKjB,KAAL,CAAWkB,KAAX,IAAkB,IAArB,EAA0B;AAC1B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACC,KAdI,CAiBL;AACA;AACA;;;AACA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,OAAD;AAAU,MAAA,aAAa,EAAE,KAAKnB,WAA9B;AAA6C,MAAA,OAAO,EAAE,KAAKS,KAA3D;AAAsE,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWkB,KAAX,CAAiBC,EAAjB,CAAoBC,OAAnG;AAA4G,MAAA,IAAI,EAAEP,IAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,MAHJ,eAQI;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKb,KAAL,CAAWkB,KAAX,CAAiBG,OAAjB,CAAyBC,KAApD,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKtB,KAAL,CAAWkB,KAAX,CAAiBG,OAAjB,CAAyBE,WAA7B,CAFA,CARJ,CAFJ;AAkBD;;AAxFkC;;AA6FzC,eAAe5B,WAAf","sourcesContent":["import React from 'react'; \r\nimport YouTube from 'react-youtube';\r\n// You need to pass a funciton to VideoDetail \r\n// Which will then be called from inside, \r\n//props.video.id.videoId ---> This  is the link to the video\r\nclass VideoDetail extends React.Component{\r\n\r\n    state = {event:event}; \r\n\r\n    videochange = (event) => {\r\n\r\n        \r\n        this.props.play(event.target.playerInfo.currentTime, event.target.playerInfo.playerState);\r\n\r\n        //PlayerState = 2 then it is playing\r\n        //PlayerState = 1 then it is pasued\r\n\r\n        //Match the player state, if it is 2 we pause at the current time, if it is 1 we play at the currnet time that is passed\r\n        //this.setState({time:event.target.playerInfo.currentTime,playerState:event.target.playerInfo.playerState});\r\n        this.setState({target:event.target.seekTo(1)}); \r\n    }\r\n\r\n\r\n    ready =(event) =>{\r\n\r\n        //So its all dependant on the props state here\r\n        //-1 == unstarted\r\n        //0 == ended\r\n        //1 = playing\r\n        //2 = pasued\r\n        //3 =  buffering\r\n        //5 = video cued \r\n\r\n        //event.target.player.seekTo(this.props.time);\r\n        event.target.seekTo(this.props.time);\r\n\r\n    }\r\n\r\n    //If the props have changed, then I want to \r\n    componentDidUpdate(prevProps) {\r\n    \r\n        if(prevProps.time != this.props.time){\r\n\r\n            this.state.target.seekTo(this.props.time);\r\n\r\n        }\r\n\r\n\r\n\r\n      }\r\n    \r\n\r\n\r\n\r\n  \r\n    render() {\r\n\r\n        const opts = {\r\n          height: '390',\r\n          width: '640',\r\n          playerVars: {\r\n            // https://developers.google.com/youtube/player_parameters\r\n        \r\n            enablejsapi:1\r\n          },\r\n        };\r\n\r\n        if(this.props.video==null){\r\n        return <div></div>; \r\n        }\r\n        \r\n\r\n        // You need to call, a call back functtion, which then will will emit to all other sockets, then on reciveing from \r\n        //Socket you can then click the button to play\r\n        //You need to send back event.target\r\n        return(\r\n\r\n            <div>\r\n\r\n                \r\n                <div  className=\"ui embed\">\r\n                <YouTube  onStateChange={this.videochange}   onReady={this.ready}     videoId={this.props.video.id.videoId} opts={opts}  />;\r\n        \r\n                </div>\r\n        \r\n                <div className = \"ui segment\">\r\n                <h4 className=\"ui header\">{this.props.video.snippet.title}</h4>\r\n                <p>{this.props.video.snippet.description}</p>\r\n                </div>\r\n        \r\n            </div>\r\n        \r\n        );\r\n      }\r\n    \r\n}\r\n\r\n\r\nexport default VideoDetail;"]},"metadata":{},"sourceType":"module"}