{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\react\\\\YouTubeClone\\\\client\\\\src\\\\comp\\\\VideoDetail.js\";\nimport React from 'react';\nimport YouTube from 'react-youtube'; // You need to pass a funciton to VideoDetail \n// Which will then be called from inside, \n//props.video.id.videoId ---> This  is the link to the video\n\nclass VideoDetail extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      time: this.props.time,\n      playerState: this.props.playerState,\n      player: []\n    };\n\n    this.videochange = event => {\n      this.props.play(event.target.playerInfo.currentTime, event.target.playerInfo.playerState); //PlayerState = 2 then it is playing\n      //PlayerState = 1 then it is pasued\n      //Match the player state, if it is 2 we pause at the current time, if it is 1 we play at the currnet time that is passed\n\n      this.setState({\n        time: event.target.playerInfo.currentTime,\n        playerState: event.target.playerInfo.playerState\n      });\n    };\n  }\n\n  //If the props have changed, then I want to \n  componentDidUpdate(prevProps) {\n    if (this.state.time != this.props.time) {\n      console.log(this.state.player);\n    }\n  }\n\n  Ready(event) {\n    const player = this.state.player;\n    player.push(event.target);\n    this.setState({\n      player: player\n    });\n  }\n\n  render() {\n    const opts = {\n      height: '390',\n      width: '640',\n      playerVars: {\n        // https://developers.google.com/youtube/player_parameters\n        enablejsapi: 1\n      }\n    };\n\n    if (this.props.video == null) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }\n      });\n    } // You need to call, a call back functtion, which then will will emit to all other sockets, then on reciveing from \n    //Socket you can then click the button to play\n    //You need to send back event.target\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui embed\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(YouTube, {\n      onStateChange: this.videochange,\n      onReady: this.Ready,\n      videoId: this.props.video.id.videoId,\n      opts: opts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }), \";\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"ui header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, this.props.video.snippet.title), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, this.props.video.snippet.description)));\n  }\n\n}\n\nexport default VideoDetail;","map":{"version":3,"sources":["C:/Users/david/react/YouTubeClone/client/src/comp/VideoDetail.js"],"names":["React","YouTube","VideoDetail","Component","state","time","props","playerState","player","videochange","event","play","target","playerInfo","currentTime","setState","componentDidUpdate","prevProps","console","log","Ready","push","render","opts","height","width","playerVars","enablejsapi","video","id","videoId","snippet","title","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,eAApB,C,CACA;AACA;AACA;;AACA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAAyC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE7B;AAACC,MAAAA,IAAI,EAAC,KAAKC,KAAL,CAAWD,IAAjB;AAAuBE,MAAAA,WAAW,EAAC,KAAKD,KAAL,CAAWC,WAA9C;AAA2DC,MAAAA,MAAM,EAAC;AAAlE,KAF6B;;AAAA,SAIrCC,WAJqC,GAItBC,KAAD,IAAW;AAGrB,WAAKJ,KAAL,CAAWK,IAAX,CAAgBD,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBC,WAAxC,EAAqDJ,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBN,WAA7E,EAHqB,CAKrB;AACA;AAEA;;AACA,WAAKQ,QAAL,CAAc;AAACV,QAAAA,IAAI,EAACK,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBC,WAA9B;AAA0CP,QAAAA,WAAW,EAACG,KAAK,CAACE,MAAN,CAAaC,UAAb,CAAwBN;AAA9E,OAAd;AAEH,KAfoC;AAAA;;AAiBrC;AACAS,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAE1B,QAAG,KAAKb,KAAL,CAAWC,IAAX,IAAmB,KAAKC,KAAL,CAAWD,IAAjC,EAAsC;AAElCa,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKf,KAAL,CAAWI,MAAvB;AAEH;AAIF;;AAGDY,EAAAA,KAAK,CAACV,KAAD,EAAQ;AACX,UAAMF,MAAM,GAAG,KAAKJ,KAAL,CAAWI,MAA1B;AACAA,IAAAA,MAAM,CAACa,IAAP,CAAYX,KAAK,CAACE,MAAlB;AACA,SAAKG,QAAL,CAAc;AACZP,MAAAA,MAAM,EAAEA;AADI,KAAd;AAGD;;AAKHc,EAAAA,MAAM,GAAG;AAEL,UAAMC,IAAI,GAAG;AACXC,MAAAA,MAAM,EAAE,KADG;AAEXC,MAAAA,KAAK,EAAE,KAFI;AAGXC,MAAAA,UAAU,EAAE;AACV;AAEAC,QAAAA,WAAW,EAAC;AAHF;AAHD,KAAb;;AAUA,QAAG,KAAKrB,KAAL,CAAWsB,KAAX,IAAkB,IAArB,EAA0B;AAC1B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACC,KAdI,CAiBL;AACA;AACA;;;AACA,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,OAAD;AAAU,MAAA,aAAa,EAAE,KAAKnB,WAA9B;AAA6C,MAAA,OAAO,EAAE,KAAKW,KAA3D;AAAsE,MAAA,OAAO,EAAE,KAAKd,KAAL,CAAWsB,KAAX,CAAiBC,EAAjB,CAAoBC,OAAnG;AAA4G,MAAA,IAAI,EAAEP,IAAlH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,MAHJ,eAQI;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2B,KAAKjB,KAAL,CAAWsB,KAAX,CAAiBG,OAAjB,CAAyBC,KAApD,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAK1B,KAAL,CAAWsB,KAAX,CAAiBG,OAAjB,CAAyBE,WAA7B,CAFA,CARJ,CAFJ;AAkBD;;AAhFkC;;AAqFzC,eAAe/B,WAAf","sourcesContent":["import React from 'react'; \r\nimport YouTube from 'react-youtube';\r\n// You need to pass a funciton to VideoDetail \r\n// Which will then be called from inside, \r\n//props.video.id.videoId ---> This  is the link to the video\r\nclass VideoDetail extends React.Component{\r\n\r\n    state = {time:this.props.time, playerState:this.props.playerState, player:[]}; \r\n\r\n    videochange = (event) => {\r\n\r\n        \r\n        this.props.play(event.target.playerInfo.currentTime, event.target.playerInfo.playerState);\r\n\r\n        //PlayerState = 2 then it is playing\r\n        //PlayerState = 1 then it is pasued\r\n\r\n        //Match the player state, if it is 2 we pause at the current time, if it is 1 we play at the currnet time that is passed\r\n        this.setState({time:event.target.playerInfo.currentTime,playerState:event.target.playerInfo.playerState});\r\n       \r\n    }\r\n\r\n    //If the props have changed, then I want to \r\n    componentDidUpdate(prevProps) {\r\n    \r\n        if(this.state.time != this.props.time){\r\n\r\n            console.log(this.state.player)\r\n\r\n        }\r\n\r\n\r\n\r\n      }\r\n    \r\n\r\n      Ready(event) {\r\n        const player = this.state.player;\r\n        player.push(event.target);\r\n        this.setState({\r\n          player: player\r\n        });\r\n      }\r\n\r\n\r\n\r\n  \r\n    render() {\r\n\r\n        const opts = {\r\n          height: '390',\r\n          width: '640',\r\n          playerVars: {\r\n            // https://developers.google.com/youtube/player_parameters\r\n        \r\n            enablejsapi:1\r\n          },\r\n        };\r\n\r\n        if(this.props.video==null){\r\n        return <div></div>; \r\n        }\r\n        \r\n\r\n        // You need to call, a call back functtion, which then will will emit to all other sockets, then on reciveing from \r\n        //Socket you can then click the button to play\r\n        //You need to send back event.target\r\n        return(\r\n\r\n            <div>\r\n\r\n                \r\n                <div  className=\"ui embed\">\r\n                <YouTube  onStateChange={this.videochange}   onReady={this.Ready}     videoId={this.props.video.id.videoId} opts={opts}  />;\r\n        \r\n                </div>\r\n        \r\n                <div className = \"ui segment\">\r\n                <h4 className=\"ui header\">{this.props.video.snippet.title}</h4>\r\n                <p>{this.props.video.snippet.description}</p>\r\n                </div>\r\n        \r\n            </div>\r\n        \r\n        );\r\n      }\r\n    \r\n}\r\n\r\n\r\nexport default VideoDetail;"]},"metadata":{},"sourceType":"module"}