{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\react\\\\YouTubeClone\\\\client\\\\src\\\\comp\\\\App.js\";\nimport React from 'react';\nimport SearchBar from './SearchBar';\nimport youtube from '../api/youtube';\nimport VideoList from './VideoList';\nimport VideoDetail from './VideoDetail';\nimport CommentDetail from './CommentDetail';\nimport socketIOClient from \"socket.io-client\";\nimport Message from './Message';\nimport MessageList from './MessageList';\nimport Login from './Login';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      videos: [],\n      selectedVideo: null,\n      data: null,\n      endpoint: \"localhost:4001\",\n      color: 'white',\n      messages: [],\n      newTime: 0,\n      time: 0,\n      playerState: -1,\n      target: [],\n      id: Math.floor(Math.random() * 100000)\n    };\n\n    this.send = list => {\n      const socket = socketIOClient(this.state.endpoint); //You are sendign the array of messages\n\n      socket.emit('change color', list);\n    };\n\n    this.EmitSearch = result => {\n      const socket = socketIOClient(this.state.endpoint);\n      socket.emit('search', result);\n    };\n\n    this.componentWillMount = () => {\n      const socket = socketIOClient(this.state.endpoint);\n      socket.on('change color', col => {\n        // Here Im updating the messages array, to be the new messages that I have recived\n        this.setState({\n          messages: col\n        });\n      }); // Setting the state with the search result\n\n      socket.on('search', result => {\n        this.setState({\n          videos: result.data.items,\n          selectedVideo: result.data.items[0]\n        });\n      });\n      socket.on('select', video => {\n        this.setState({\n          selectedVideo: video\n        });\n      });\n      socket.on('play', state => {\n        this.setState({\n          playerState: state\n        });\n      });\n      socket.on('newTime', newTime => {\n        this.setState({\n          newTime: newTime\n        });\n      });\n    };\n\n    this.sendMessage = message => {\n      // You take this message that is given, and update the state of the messages\n      const list = this.state.messages;\n      list.push(message);\n      this.send(list);\n    };\n\n    this.pressPlay = state => {\n      const socket = socketIOClient(this.state.endpoint);\n      socket.emit('play', state);\n    };\n\n    this.newTime = newTime => {\n      const socket = socketIOClient(this.state.endpoint);\n      socket.emit('newTime', newTime);\n    };\n\n    this.search = async term => {\n      //The SearchBar calls the search funciton with the term\n      // And here we will make the api request\n      const result = await youtube.get(\"/search\", {\n        params: {\n          q: term,\n          part: \"snippet\",\n          type: 'video',\n          maxResults: 5,\n          key: 'AIzaSyBSAzBSy4bhfG8JaCmptEDdreLpQXdAAbQ'\n        }\n      });\n      this.EmitSearch(result);\n    };\n\n    this.onVideoSelect = video => {\n      const socket = socketIOClient(this.state.endpoint);\n      socket.emit('select', video);\n    };\n  }\n\n  render() {\n    if (true) {\n      // Here you need to have the login form, this is also where\n      // will ask the perosn to join a room, or generate a code\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"cont\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ui segment\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Login, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui container\",\n      style: {\n        marginTop: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(SearchBar, {\n      Search: this.search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui grid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"eleven wide column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(VideoDetail, {\n      updatedTime: this.state.newTime,\n      newTime: this.newTime,\n      id: this.state.id,\n      time: this.state.time,\n      playerState: this.state.playerState,\n      play: this.pressPlay,\n      video: this.state.selectedVideo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"ui header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }\n    }, \" Chat Room\"), this.state.data, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(MessageList, {\n      msglist: this.state.messages,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Message, {\n      msg: this.sendMessage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"five wide column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(VideoList, {\n      videos: this.state.videos,\n      onVideoSelect: this.onVideoSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui fluid segment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Login, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/david/react/YouTubeClone/client/src/comp/App.js"],"names":["React","SearchBar","youtube","VideoList","VideoDetail","CommentDetail","socketIOClient","Message","MessageList","Login","App","Component","state","videos","selectedVideo","data","endpoint","color","messages","newTime","time","playerState","target","id","Math","floor","random","send","list","socket","emit","EmitSearch","result","componentWillMount","on","col","setState","items","video","sendMessage","message","push","pressPlay","search","term","get","params","q","part","type","maxResults","key","onVideoSelect","render","marginTop"],"mappings":"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","sourcesContent":["import React from 'react'; \r\nimport SearchBar from './SearchBar'; \r\nimport youtube from '../api/youtube';\r\nimport VideoList from './VideoList';\r\nimport VideoDetail from './VideoDetail';\r\nimport CommentDetail from './CommentDetail';\r\nimport socketIOClient from \"socket.io-client\";\r\nimport Message from './Message'; \r\nimport MessageList from './MessageList';\r\nimport Login from './Login'; \r\nimport './App.css';\r\n\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {videos: [], selectedVideo: null, data:null,  endpoint: \"localhost:4001\", color: 'white', messages:[],newTime:0, time:0, playerState:-1, target:[], id: Math.floor(Math.random() * 100000) };\r\n\r\n    send = (list) => {\r\n        const socket = socketIOClient(this.state.endpoint);\r\n        //You are sendign the array of messages\r\n        socket.emit('change color', list) \r\n      }\r\n\r\n    // When a user makes a search query, it is emmited to the other sockets, then once it is recived again, it will be rendered\r\n    EmitSearch = (result) =>{\r\n       \r\n        const socket = socketIOClient(this.state.endpoint);\r\n        socket.emit('search', result) \r\n\r\n\r\n    }\r\n      componentWillMount = () => {\r\n          const socket = socketIOClient(this.state.endpoint);\r\n          socket.on('change color', (col) => {\r\n              // Here Im updating the messages array, to be the new messages that I have recived\r\n              this.setState({messages:col});\r\n          })\r\n\r\n          // Setting the state with the search result\r\n          socket.on('search', (result) => {\r\n            \r\n            this.setState({\r\n                videos: result.data.items,\r\n                selectedVideo:result.data.items[0]\r\n              });   \r\n        })\r\n\r\n        socket.on('select', (video) => {\r\n            \r\n            this.setState({selectedVideo:video});\r\n\r\n        })\r\n\r\n        socket.on('play', (state) => {\r\n            this.setState({playerState:state})\r\n        })\r\n\r\n        socket.on('newTime', (newTime) => {\r\n            this.setState({newTime:newTime})\r\n        })\r\n\r\n\r\n      }\r\n\r\n    sendMessage = (message) =>{\r\n        \r\n        // You take this message that is given, and update the state of the messages\r\n        const list = this.state.messages;\r\n        list.push(message); \r\n        this.send(list)\r\n\r\n    }\r\n\r\n\r\n    pressPlay = (state) => {\r\n\r\n        const socket = socketIOClient(this.state.endpoint);\r\n        socket.emit('play', state)\r\n\r\n\r\n    }\r\n\r\n\r\n    newTime = (newTime) => {\r\n\r\n        const socket = socketIOClient(this.state.endpoint);\r\n        socket.emit('newTime', newTime)\r\n\r\n\r\n    }\r\n\r\n \r\n    search = async (term)=>{\r\n        //The SearchBar calls the search funciton with the term\r\n        // And here we will make the api request\r\n\r\n        const result = await youtube.get(\"/search\", {\r\n            params: {\r\n              q: term,\r\n              part: \"snippet\",\r\n               type: 'video',\r\n              maxResults: 5,\r\n              key: 'AIzaSyBSAzBSy4bhfG8JaCmptEDdreLpQXdAAbQ'            }\r\n          });\r\n         \r\n          this.EmitSearch(result);\r\n          \r\n    }\r\n\r\n\r\n// This is a function\r\nonVideoSelect = (video) =>{\r\n\r\n    \r\n    const socket = socketIOClient(this.state.endpoint);\r\n    socket.emit('select', video) \r\n   \r\n}\r\n\r\nrender(){\r\n\r\n    if(true){\r\n\r\n\r\n        // Here you need to have the login form, this is also where\r\n        // will ask the perosn to join a room, or generate a code\r\n\r\n        return(\r\n            <div className=\"cont\">\r\n                <div className=\"ui segment\" >\r\n                <Login/>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n    \r\n\r\n    return(\r\n\r\n        <div className=\"ui container\" style ={{marginTop:'10px' }}>\r\n\r\n            <SearchBar Search={this.search} />\r\n            \r\n            \r\n            <div className=\"ui grid\">\r\n                <div className=\"ui row\">\r\n\r\n                    <div  className=\"eleven wide column\">\r\n                        \r\n                        <VideoDetail  updatedTime={this.state.newTime} newTime ={this.newTime}id={this.state.id} time ={this.state.time} playerState={this.state.playerState} play={this.pressPlay} video={this.state.selectedVideo}/>\r\n                        <h4 className=\"ui header\"> Chat Room</h4>\r\n                            \r\n                                {this.state.data}\r\n                            <div className=\"ui segment\"> \r\n                            <MessageList msglist={this.state.messages}/>\r\n                            \r\n                            </div>\r\n                            <Message msg={this.sendMessage} />\r\n\r\n\r\n\r\n                    </div>\r\n\r\n                    <div className=\"five wide column\">\r\n\r\n                        <VideoList videos={this.state.videos} onVideoSelect = {this.onVideoSelect}/>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n                 \r\n                \r\n            </div>\r\n            <div className=\"ui fluid segment\" >\r\n            <Login/>\r\n            </div>\r\n    \r\n         </div>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default App; "]},"metadata":{},"sourceType":"module"}